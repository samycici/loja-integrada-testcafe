'use strict';

exports.__esModule = true;

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

exports.createRole = createRole;
exports.createAnonymousRole = createAnonymousRole;

var _events = require('events');

var _shortid = require('shortid');

var _shortid2 = _interopRequireDefault(_shortid);

var _phase = require('./phase');

var _phase2 = _interopRequireDefault(_phase);

var _typeAssertions = require('../errors/runtime/type-assertions');

var _wrapTestFunction = require('../api/wrap-test-function');

var _wrapTestFunction2 = _interopRequireDefault(_wrapTestFunction);

var _testPageUrl = require('../api/test-page-url');

var _actions = require('../test-run/commands/actions');

var _markerSymbol = require('./marker-symbol');

var _markerSymbol2 = _interopRequireDefault(_markerSymbol);

var _delay = require('../utils/delay');

var _delay2 = _interopRequireDefault(_delay);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var COOKIE_SYNC_DELAY = 100;

var Role = function (_EventEmitter) {
    (0, _inherits3.default)(Role, _EventEmitter);

    function Role(loginPage, initFn) {
        (0, _classCallCheck3.default)(this, Role);

        var _this = (0, _possibleConstructorReturn3.default)(this, _EventEmitter.call(this));

        _this[_markerSymbol2.default] = true;

        _this.id = _shortid2.default.generate();
        _this.phase = loginPage ? _phase2.default.uninitialized : _phase2.default.initialized;

        _this.loginPage = loginPage;
        _this.initFn = initFn;

        _this.stateSnapshot = null;
        _this.initErr = null;
        return _this;
    }

    Role.prototype.initialize = function () {
        var _ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee(testRun) {
            var navigateCommand;
            return _regenerator2.default.wrap(function _callee$(_context) {
                while (1) {
                    switch (_context.prev = _context.next) {
                        case 0:
                            this.phase = _phase2.default.pendingInitialization;

                            _context.next = 3;
                            return testRun.switchToCleanRun();

                        case 3:
                            navigateCommand = new _actions.NavigateToCommand({ url: this.loginPage });
                            _context.next = 6;
                            return testRun.executeCommand(navigateCommand);

                        case 6:
                            _context.prev = 6;

                            testRun.disableDebugBreakpoints = false;
                            _context.next = 10;
                            return this.initFn(testRun);

                        case 10:
                            _context.next = 15;
                            break;

                        case 12:
                            _context.prev = 12;
                            _context.t0 = _context['catch'](6);

                            this.initErr = _context.t0;

                        case 15:

                            testRun.disableDebugBreakpoints = true;

                            if (this.initErr) {
                                _context.next = 20;
                                break;
                            }

                            _context.next = 19;
                            return (0, _delay2.default)(COOKIE_SYNC_DELAY);

                        case 19:
                            this.stateSnapshot = testRun.getStateSnapshot();

                        case 20:

                            this.phase = _phase2.default.initialized;
                            this.emit('initialized');

                        case 22:
                        case 'end':
                            return _context.stop();
                    }
                }
            }, _callee, this, [[6, 12]]);
        }));

        function initialize(_x) {
            return _ref.apply(this, arguments);
        }

        return initialize;
    }();

    return Role;
}(_events.EventEmitter);

function createRole(loginPage, initFn) {
    (0, _typeAssertions.assertType)(_typeAssertions.is.string, 'Role', '"loginPage" argument', loginPage);
    (0, _typeAssertions.assertType)(_typeAssertions.is.function, 'Role', '"initFn" argument', initFn);

    loginPage = (0, _testPageUrl.resolvePageUrl)(loginPage);
    initFn = (0, _wrapTestFunction2.default)(initFn);

    return new Role(loginPage, initFn);
}

function createAnonymousRole() {
    return new Role(null, null);
}